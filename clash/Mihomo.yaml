# 锚点 - 节点筛选组
FilterHK:  &FilterHK  '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW:  &FilterTW  '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP:  &FilterJP  '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR:  &FilterKR  '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG:  &FilterSG  '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS:  &FilterUS  '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)(\d+)?\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'
# 锚点 - 策略组参数
UrlTest:     &UrlTest     { type: url-test,     interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true, include-all: true, tolerance: 20 }
FallBack:    &FallBack    { type: fallback,     interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true, include-all: true }
LoadBalance: &LoadBalance { type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true, include-all: true, strategy: consistent-hashing }
# 锚点 - 规则参数
MrsIP:      &MrsIP      { format: mrs,  behavior: ipcidr,    type: http, interval: 3600, proxy: DIRECT }
MrsClass:   &MrsDomain  { format: mrs,  behavior: classical, type: http, interval: 3600, proxy: DIRECT }
MrsDomain:  &MrsDomain  { format: mrs,  behavior: domain,    type: http, interval: 3600, proxy: DIRECT }
TextIP:     &TextIP     { format: text, behavior: ipcidr,    type: http, interval: 3600, proxy: DIRECT }
TextClass:  &TextClass  { format: text, behavior: classical, type: http, interval: 3600, proxy: DIRECT }
TextDomain: &TextDomain { format: text, behavior: domain,    type: http, interval: 3600, proxy: DIRECT }
YamlIP:     &YamlIP     { format: yaml, behavior: ipcidr,    type: http, interval: 3600, proxy: DIRECT }
YamlClass:  &YamlClass  { format: yaml, behavior: classical, type: http, interval: 3600, proxy: DIRECT }
YamlDomain: &YamlDomain { format: yaml, behavior: domain,    type: http, interval: 3600, proxy: DIRECT }
# 锚点 - 节点选择
#ProxyNation: &ProxyNation [ 香港节点, 台湾节点, 日本节点, 韩国节点, 新国节点, 美国节点 ]
ProxyFirst:  &ProxyFirst  { type: select, proxies: [ 代理节点, 香港节点, 台湾节点, 日本节点, 韩国节点, 新国节点, 美国节点 ] }
DirectFirst: &DirectFirst { type: select, proxies: [ DIRECT, 代理节点, 香港节点, 台湾节点, 日本节点, 韩国节点, 新国节点, 美国节点 ] }

# 锚点 - 字符串
CDN_ios_rule_script: 'https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master'
# ================================ 上面为锚点区 ================================

# 策略组
proxy-groups:
  # 主要
  - { name: 代理节点, type: select, proxies: [ 香港节点, 台湾节点, 日本节点, 韩国节点, 新国节点, 美国节点, 手动节点 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png }
  - { name: 手动节点, type: select, filter: *FilterAll, include-all-providers: true, include-all: true, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png }
  - { name: 广告节点, type: select, proxies: [ REJECT,DIRECT ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Adblock.png }
  - { name: 兜底节点, type: select, proxies: [ DIRECT, 手动节点, 代理节点, 香港节点, 台湾节点, 日本节点, 韩国节点, 新国节点, 美国节点 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png }
  # 地区
  - { name: 香港节点, type: select, filter: *FilterHK, include-all-providers: true, include-all: true, proxies: [ ⏱️️香港时延优选, 🚥香港故障转移, 🎛香港负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png }
  - { name: 台湾节点, type: select, filter: *FilterTW, include-all-providers: true, include-all: true, proxies: [ ⏱️️台湾时延优选, 🚥台湾故障转移, 🎛台湾负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png }
  - { name: 日本节点, type: select, filter: *FilterJP, include-all-providers: true, include-all: true, proxies: [ ⏱️️日本时延优选, 🚥日本故障转移, 🎛日本负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png }
  - { name: 韩国节点, type: select, filter: *FilterKR, include-all-providers: true, include-all: true, proxies: [ ⏱️️韩国时延优选, 🚥韩国故障转移, 🎛韩国负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png }
  - { name: 新国节点, type: select, filter: *FilterSG, include-all-providers: true, include-all: true, proxies: [ ⏱️️新国时延优选, 🚥新国故障转移, 🎛新国负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png }
  - { name: 美国节点, type: select, filter: *FilterUS, include-all-providers: true, include-all: true, proxies: [ ⏱️️美国时延优选, 🚥美国故障转移, 🎛美国负载均衡 ], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png }
  # 时延优选
  - { name: ⏱️️香港时延优选, <<: *UrlTest, filter: *FilterHK }
  - { name: ⏱️️台湾时延优选, <<: *UrlTest, filter: *FilterTW }
  - { name: ⏱️️日本时延优选, <<: *UrlTest, filter: *FilterJP }
  - { name: ⏱️️韩国时延优选, <<: *UrlTest, filter: *FilterKR }
  - { name: ⏱️️新国时延优选, <<: *UrlTest, filter: *FilterSG }
  - { name: ⏱️️美国时延优选, <<: *UrlTest, filter: *FilterUS }
  # 故障转移
  - { name: 🚥香港故障转移, <<: *FallBack, filter: *FilterHK }
  - { name: 🚥台湾故障转移, <<: *FallBack, filter: *FilterTW }
  - { name: 🚥日本故障转移, <<: *FallBack, filter: *FilterJP }
  - { name: 🚥韩国故障转移, <<: *FallBack, filter: *FilterKR }
  - { name: 🚥新国故障转移, <<: *FallBack, filter: *FilterSG }
  - { name: 🚥美国故障转移, <<: *FallBack, filter: *FilterUS }
  # 负载均衡
  - { name: 🎛香港负载均衡, <<: *LoadBalance, filter: *FilterHK }
  - { name: 🎛台湾负载均衡, <<: *LoadBalance, filter: *FilterTW }
  - { name: 🎛日本负载均衡, <<: *LoadBalance, filter: *FilterJP }
  - { name: 🎛韩国负载均衡, <<: *LoadBalance, filter: *FilterKR }
  - { name: 🎛新国负载均衡, <<: *LoadBalance, filter: *FilterSG }
  - { name: 🎛美国负载均衡, <<: *LoadBalance, filter: *FilterUS }
  # 服务
  - { name: AIGC,     <<: *ProxyFirst,  icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png }
  - { name: 苹果,     <<: *DirectFirst, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png }
  - { name: 苹果境外, <<: *ProxyFirst,  icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png }
  - { name: 谷歌,     <<: *ProxyFirst,  icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Google.png }
  - { name: 电报,     <<: *ProxyFirst,  icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png }
  - { name: 微软,     <<: *DirectFirst, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Microsoft.png }
  - { name: 境外下载, <<: *DirectFirst, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Speedtest.png, include-all-providers: true, include-all: true, filter: *FilterAll }
# 规则指向
rules:
  - RULE-SET, PreferDirect,                 DIRECT
  - RULE-SET, PreferProxy,                  代理节点
  - RULE-SET, Advertising,                  广告节点
  - RULE-SET, Lan,                          DIRECT
  - RULE-SET, AI,                           AIGC
  - RULE-SET, iCloudChina,                  DIRECT
  - RULE-SET, ApplePush,                    DIRECT
  - RULE-SET, AppleSoftwareUpdates,         DIRECT
  - RULE-SET, AppleProxy,                   苹果境外
  - RULE-SET, Apple,                        苹果
  - RULE-SET, YouTube,                      谷歌
  - RULE-SET, YouTubeMusic,                 谷歌
  - RULE-SET, Google,                       谷歌
  - RULE-SET, TelegramSG,                   新国节点
  - RULE-SET, TelegramUS,                   美国节点
  - RULE-SET, Telegram,                     电报
  - RULE-SET, Microsoft,                    微软
  - RULE-SET, ChinaDownloadCDN,             DIRECT
  - RULE-SET, InternationalDownloadCDN,     境外下载
  - RULE-SET, Cloudflarecn,                 DIRECT
  - RULE-SET, Cloudflare,                   代理节点
  - RULE-SET, GitHub,                       代理节点
  - RULE-SET, Docker,                       代理节点
  - RULE-SET, Twitter,                      代理节点
  - RULE-SET, ChinaMax_OCD_Domain,          DIRECT
  - RULE-SET, ChinaMax_OCD_IP,              DIRECT, no-resolve
  - GEOIP,    CN,                           DIRECT
  - MATCH,                                  兜底节点

# 订阅规则
rule-providers:
  # 个人规则
  PreferDirect:             { <<: *YamlClass, path: './rules/PreferDirect.yaml',              url: 'https://github.com/lizhian/rule-override/raw/refs/heads/main/clash/PreferDirect.yaml' }
  PreferProxy:              { <<: *YamlClass, path: './rules/PreferProxy.yaml',               url: 'https://github.com/lizhian/rule-override/raw/refs/heads/main/clash/PreferProxy.yaml' }
  # 广告
  Advertising:              { <<: *YamlClass, path: './rules/Advertising.yaml',               url: '{{CDN_ios_rule_script}}/rule/Clash/Advertising/Advertising_Classical.yaml' }
  Lan:                      { <<: *YamlClass, path: './rules/Lan.yaml',                       url: 'https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan.yaml' }

  AI:                       { <<: *YamlClass, path: './rules/AI.yaml',                        url: 'https://kelee.one/Tool/Clash/Rule/AI.yaml' }
  iCloudChina:              { <<: *YamlClass, path: './rules/iCloudChina.yaml',               url: 'https://kelee.one/Tool/Clash/Rule/iCloudChina.yaml' }
  ApplePush:                { <<: *YamlClass, path: './rules/ApplePush.yaml',                 url: 'https://kelee.one/Tool/Clash/Rule/ApplePushNotificationService.yaml' }
  AppleSoftwareUpdates:     { <<: *YamlClass, path: './rules/AppleSoftwareUpdates.yaml',      url: 'https://kelee.one/Tool/Clash/Rule/AppleSoftwareUpdates.yaml' }
  AppleProxy:               { <<: *YamlClass, path: './rules/AppleProxy.yaml',                url: 'https://rule.kelee.one/Clash/AppleProxy.yaml' }
  Apple:                    { <<: *YamlClass, path: './rules/Apple.yaml',                     url: 'https://rule.kelee.one/Clash/Apple.yaml' }
  YouTube:                  { <<: *YamlClass, path: './rules/YouTube.yaml',                   url: 'https://rule.kelee.one/Clash/YouTube.yaml' }
  YouTubeMusic:             { <<: *YamlClass, path: './rules/YouTubeMusic.yaml',              url: 'https://rule.kelee.one/Clash/YouTubeMusic.yaml' }
  Google:                   { <<: *YamlClass, path: './rules/Google.yaml',                    url: 'https://rule.kelee.one/Clash/Google.yaml' }
  TelegramSG:               { <<: *YamlClass, path: './rules/TelegramSG.yaml',                url: 'https://rule.kelee.one/Clash/TelegramSG.yaml' }
  TelegramUS:               { <<: *YamlClass, path: './rules/TelegramUS.yaml',                url: 'https://rule.kelee.one/Clash/TelegramUS.yaml' }
  Telegram:                 { <<: *YamlClass, path: './rules/Telegram.yaml',                  url: 'https://rule.kelee.one/Clash/Telegram.yaml' }
  Microsoft:                { <<: *YamlClass, path: './rules/Microsoft.yaml',                 url: 'https://rule.kelee.one/Clash/Microsoft.yaml' }
  ChinaDownloadCDN:         { <<: *YamlClass, path: './rules/ChinaDownloadCDN.yaml',          url: 'https://kelee.one/Tool/Clash/Rule/ChinaDownloadCDN.yaml' }
  InternationalDownloadCDN: { <<: *YamlClass, path: './rules/InternationalDownloadCDN.yaml',  url: 'https://kelee.one/Tool/Clash/Rule/InternationalDownloadCDN.yaml' }
  Cloudflarecn:             { <<: *YamlClass, path: './rules/Cloudflarecn.yaml',              url: 'https://rule.kelee.one/Clash/Cloudflarecn.yaml' }
  Cloudflare:               { <<: *YamlClass, path: './rules/Cloudflare.yaml',                url: 'https://rule.kelee.one/Clash/Cloudflare.yaml' }
  GitHub:                   { <<: *YamlClass, path: './rules/GitHub.yaml',                    url: 'https://rule.kelee.one/Clash/GitHub.yaml' }
  Docker:                   { <<: *YamlClass, path: './rules/Docker.yaml',                    url: 'https://rule.kelee.one/Clash/Docker.yaml' }
  Twitter:                  { <<: *YamlClass, path: './rules/Twitter.yaml',                   url: 'https://rule.kelee.one/Clash/Twitter.yaml' }
  ChinaMax_OCD_Domain:      { <<: *MrsDomain, path: './rules/ChinaMax_OCD_Domain.mrs',        url: 'https://cdn.jsdelivr.net/gh/peiyingyao/Rule-for-OCD@master/rule/Clash/ChinaMax/ChinaMax_OCD_Domain.mrs' }
  ChinaMax_OCD_IP:          { <<: *MrsIP,     path: './rules/ChinaMax_OCD_IP.mrs',            url: 'https://cdn.jsdelivr.net/gh/peiyingyao/Rule-for-OCD@master/rule/Clash/ChinaMax/ChinaMax_OCD_IP.mrs' }


port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true

external-controller: 0.0.0.0:9090
external-ui: ui
external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://geodata.kelee.one/Country-Masaiki.mmdb'
  asn: 'https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [ 80, 8080-8880 ]
      override-destination: true
    TLS:
      ports: [ 443, 8443 ]
    QUIC:
      ports: [ 443, 8443 ]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

# P2P下载端口
listeners:
  - name: socks5-in-1
    type: socks
    port: 10808
    listen: 0.0.0.0
    udp: true
    users: [ ]
    proxy: DIRECT

dns:
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:1053
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query
    - https://223.6.6.6/dns-query

